
{
  "rules": {
    "Users": {
      "$uid": {
        ".write": "auth != null && auth.uid === $uid",
        "name": {
          ".read": true
        },
        "email": {
          ".read": "auth != null && auth.uid === $uid"
        },
        "createdAt": {
          ".read": "auth != null && auth.uid === $uid"
        },
        "lastLogInTime": {
          ".read": "auth != null && auth.uid === $uid"
        },
        "hasSeenWelcomeTour": {
          ".read": "auth != null && auth.uid === $uid"
        }
      }
    },
    "UserPreferences": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid && !newData.exists()",
        "workingHours": {
          ".write": "auth != null && auth.uid === $uid"
        },
        "bookingSettings": {
          ".write": "auth != null && auth.uid === $uid"
        },
        "googleCalendar": {
          ".write": "newData.child('writtenBy').val() === $uid"
        }
      }
    },
    "Appointments": {
      "$serviceProviderId": {
        ".read": "auth != null && auth.uid === $serviceProviderId",
        ".write": "auth != null && auth.uid == $serviceProviderId && !newData.exists()",
        ".indexOn": ["AppointmentDate", "ClientID"],
        "$appointmentId": {
          ".write": "(auth != null && auth.uid == $serviceProviderId) || (newData.exists() && !data.exists() && newData.child('BookedByUserID').val() == $serviceProviderId) || (data.exists() && newData.child('_serverUpdatedBy').val() === $serviceProviderId)"
        }
      }
    },
    "Clients": {
      "$serviceProviderId": {
        ".read": "auth != null && auth.uid === $serviceProviderId",
        ".write": "auth != null && auth.uid == $serviceProviderId && !newData.exists()",
        ".indexOn": ["ClientEmail","ClientName"],
        "$clientId": {
          ".write": "(auth != null && auth.uid == $serviceProviderId) || (newData.exists() && !data.exists() && newData.child('CreatedByUserID').val() == $serviceProviderId)"
        }
      }
    }
  }
}
